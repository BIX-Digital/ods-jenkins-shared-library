stageDeployToOpenshift deploys the service.

When no "openshift" folder is present, a deployment is just an update of the
container image.

However, when an "openshift" folder is present, this stage can fully control the
OpenShift resources for this service via code, e.g. it can deploy changes to
environment variable, or changing constraints etc. of the DeploymentConfig. It
does this by using Tailor (https://github.com/opendevstack/tailor) to sync the
"desired state" expressed in templates and parameters with the "current state"
found in OpenShift. Tailor automatically calculates the required changes and
applies them as one atomic JSON patchset.

The "tailor" binary is pre-installed in the slave-base. The behaviour of Tailor
can be customized by adding a "Tailorfile" (or a more specific, per-project
version of it such as "Tailorfile.foo-dev" and "Tailorfile.foo-test").

The actual rollout of the deployment is triggered explicitly via "oc rollout",
which also allows us to monitor the progress and fail the build if the rollout
does not work. Note that any automatic deployment triggers are disabled to
achieve this. Also, the image being rolled out is not tagged with "latest" - the
stage simply deploys the image tag that was built in the previous stage. This
assumes that the template processed by Tailor consumes the "TAGVERSION" param
and that the template uses it correctly to set the image.
